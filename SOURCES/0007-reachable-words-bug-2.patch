From 7d71be16d2fbdb7dbb872b7115d5417909e5ba5d Mon Sep 17 00:00:00 2001
From: Xavier Leroy <xavier.leroy@college-de-france.fr>
Date: Thu, 6 Jan 2022 11:09:55 +0100
Subject: [PATCH] Missing initialization in caml_obj_reachable_words

A marshaling operation can leave `extern_flags` with the `NO_SHARING`
bit set.  In this context, `caml_obj_reachable_words` calls
`extern_init_position_table`, which does nothing, then proceeds to
access the position table, causing a crash.

The solution is trivial: initialize `extern_flags` before calling
`extern_init_position_table`.

First reported at https://github.com/ocaml-multicore/ocaml-multicore/issues/824
---
 runtime/extern.c | 1 +
 testsuite/tests/lib-obj/reachable_words_bug.ml | 9 +++++++++
 2 file changed, 10 insertion(+)
 create mode 100644 testsuite/tests/lib-obj/reachable_words_bug.ml

diff --git a/runtime/extern.c b/runtime/extern.c
index 12d3c41e13e..b713c401a31 100644
--- a/runtime/extern.c
+++ b/runtime/extern.c
@@ -1136,6 +1136,7 @@ CAMLprim value caml_obj_reachable_words(value v)
   uintnat pos;
 
   obj_counter = 0;
+  extern_flags = 0;
   extern_init_position_table();
   sp = extern_stack;
   size = 0;
---

diff --git a/testsuite/tests/lib-obj/reachable_words_bug.ml b/testsuite/tests/lib-obj/reachable_words_bug.ml
new file mode 100644
index 00000000000..15969eb4210
--- /dev/null
+++ b/testsuite/tests/lib-obj/reachable_words_bug.ml
@@ -0,0 +1,9 @@
+(* TEST
+*)
+
+let _ =
+  (* In 4.13 this causes Obj.reachable_words to segfault
+     because of a missing initialization in caml_obj_reachable_words *)
+  ignore (Marshal.(to_string 123 [No_sharing]));
+  let n = Obj.reachable_words (Obj.repr (Array.init 10 (fun i -> i))) in
+  assert (n = 11)

